Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision 0ac3453007780f27362e6cab711067288a210d35)
+++ .idea/gradle.xml	(date 1607397449089)
@@ -14,6 +14,7 @@
           </set>
         </option>
         <option name="resolveModulePerSourceSet" value="false" />
+        <option name="useQualifiedModuleNames" value="true" />
       </GradleProjectSettings>
     </option>
   </component>
Index: app/src/main/java/com/example/web/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.web;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.os.AsyncTask;\r\nimport android.os.Bundle;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport android.text.method.ScrollingMovementMethod;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\n\r\nimport java.io.BufferedReader;\r\n\r\nimport java.io.InputStream;\r\nimport java.io.InputStreamReader;\r\nimport java.io.OutputStream;\r\n\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\n\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    private static String IP_ADDRESS = \"192.168.10.10\";\r\n    private static String TAG = \"sara_php_test\";\r\n\r\n    private EditText mEditTextEmail;\r\n    private EditText mEditTextName;\r\n    private EditText mEditTextPassword;\r\n    private TextView mTextViewResult;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        mTextViewResult = (TextView)findViewById(R.id.textView_main_result);\r\n        mTextViewResult.setMovementMethod(new ScrollingMovementMethod());\r\n    }\r\n\r\n    public void submit(View view) {\r\n        //이메일, 이름, 비밀번호 들어가는 위젯(Edittext)를 객체화해서 코드에서 다룰 수 있게 해줍니다.\r\n        mEditTextEmail = (EditText)findViewById(R.id.editText_main_email);\r\n        mEditTextName = (EditText)findViewById(R.id.editText_main_name);\r\n        mEditTextPassword = (EditText)findViewById(R.id.editText_main_password);\r\n\r\n        //위젯의 다루기위해서는 객체화를 해줘야합니다.\r\n        //그리고 그객체에서 text를 가져옵니다.\r\n        String email = mEditTextEmail.getText().toString();\r\n        String name = mEditTextName.getText().toString();\r\n        String password = mEditTextPassword.getText().toString();\r\n\r\n        //이 구문이 시작되면서 php를 들어가는 구문이 시작됩니다.\r\n        InsertData task = new InsertData(); //객체 생성\r\n        task.execute(\"http://\" + IP_ADDRESS + \"/author/register\", email, name, password); // 실 실행\r\n\r\n        //값을 넣고 이름 부분과, 나라 텍스트 부분을 Null로 만들어줘서 다시 작성할 수 있게 해줍니다.\r\n        mEditTextEmail.setText(\"\");\r\n        mEditTextName.setText(\"\");\r\n        mEditTextPassword.setText(\"\");\r\n    }\r\n\r\n\r\n    class InsertData extends AsyncTask<String, Void, String>{\r\n\r\n        //값이 연결되는 부분을 표현하기 위해서 받은 위젯\r\n        ProgressDialog progressDialog;\r\n\r\n        @Override\r\n        protected void onPreExecute() {\r\n            super.onPreExecute();\r\n\r\n            //폼을 제출하면 진행흐름을 보여주는 위젯\r\n            progressDialog = ProgressDialog.show(MainActivity.this,\r\n                    \"Please Wait\", null, true, true);\r\n        }\r\n\r\n\r\n        @Override\r\n        protected void onPostExecute(String result) {\r\n            super.onPostExecute(result);\r\n\r\n            progressDialog.dismiss();\r\n            mTextViewResult.setText(result);\r\n            Log.d(TAG, \"POST response  - \" + result);\r\n        }\r\n\r\n\r\n        @Override\r\n        protected String doInBackground(String... params) {\r\n\r\n            String serverURL = (String)params[0];\r\n            String email = (String)params[1];\r\n            String name = (String)params[2];\r\n            String password = (String)params[3];\r\n\r\n            String postParameters = \"email=\" +email + \"name=\" + name + \"&password=\" + password;\r\n\r\n            try {\r\n                URL url = new URL(serverURL);\r\n                HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();\r\n\r\n                httpURLConnection.setReadTimeout(5000);\r\n                httpURLConnection.setConnectTimeout(5000);\r\n\r\n                httpURLConnection.setRequestMethod(\"POST\");\r\n                httpURLConnection.connect();\r\n\r\n                //여기서 outputStream을 사용한 이유를 파악해야합니다.\r\n                OutputStream outputStream = httpURLConnection.getOutputStream();\r\n                outputStream.write(postParameters.getBytes(\"UTF-8\"));\r\n                outputStream.flush();\r\n                outputStream.close();\r\n\r\n\r\n                int responseStatusCode = httpURLConnection.getResponseCode();\r\n                Log.d(TAG, \"POST response code - \" + responseStatusCode);\r\n\r\n                InputStream inputStream;\r\n                if(responseStatusCode == HttpURLConnection.HTTP_OK) {\r\n                    inputStream = httpURLConnection.getInputStream();\r\n                }\r\n                else{\r\n                    inputStream = httpURLConnection.getErrorStream();\r\n                }\r\n\r\n\r\n                InputStreamReader inputStreamReader = new InputStreamReader(inputStream, \"UTF-8\");\r\n                BufferedReader bufferedReader = new BufferedReader(inputStreamReader);\r\n\r\n                StringBuilder sb = new StringBuilder();\r\n                String line = null;\r\n\r\n                while((line = bufferedReader.readLine()) != null){\r\n                    sb.append(line);\r\n                }\r\n\r\n                bufferedReader.close();\r\n\r\n                return sb.toString();\r\n\r\n            } catch (Exception e) {\r\n                Log.d(TAG, \"InsertData: Error \", e);\r\n                return new String(\"Error: \" + e.getMessage());\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/web/MainActivity.java	(revision 0ac3453007780f27362e6cab711067288a210d35)
+++ app/src/main/java/com/example/web/MainActivity.java	(date 1607397474323)
@@ -1,153 +1,83 @@
 package com.example.web;
 
-import android.app.ProgressDialog;
-import android.os.AsyncTask;
+import android.app.Activity;
+import android.content.Intent;
 import android.os.Bundle;
 import androidx.appcompat.app.AppCompatActivity;
-import android.text.method.ScrollingMovementMethod;
+
 import android.util.Log;
+import android.view.LayoutInflater;
 import android.view.View;
+import android.view.ViewGroup;
+import android.webkit.WebView;
+import android.webkit.WebViewClient;
+
+import android.widget.AdapterView;
+import android.widget.ArrayAdapter;
 import android.widget.Button;
-import android.widget.EditText;
+import android.widget.ImageView;
+import android.widget.ListView;
 import android.widget.TextView;
+import android.widget.Toast;
 
-import java.io.BufferedReader;
+import com.example.web.api.JsonPlaceHolderApi;
+import com.example.web.models.input;
 
-import java.io.InputStream;
-import java.io.InputStreamReader;
-import java.io.OutputStream;
+import java.util.ArrayList;
+import java.util.List;
 
-import java.net.HttpURLConnection;
-import java.net.URL;
+import retrofit2.Callback;
+import retrofit2.Response;
+import retrofit2.Retrofit;
+import retrofit2.Call;
+import retrofit2.converter.gson.GsonConverterFactory;
+
 
 
 public class MainActivity extends AppCompatActivity {
 
-    private static String IP_ADDRESS = "192.168.10.10";
-    private static String TAG = "sara_php_test";
+    // rest api로 전환하기 전에 webview
+    private WebView mWebView;
+    // 처음 초기 setting 해주기
+    private final String BASEURL = "https://walkplanetcat.com/";
 
-    private EditText mEditTextEmail;
-    private EditText mEditTextName;
-    private EditText mEditTextPassword;
-    private TextView mTextViewResult;
 
-
+    // 시작할 때 같이 시작하는 함수입니다.
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_main);
+        setContentView(R.layout.activity_login);
 
-        mTextViewResult = (TextView)findViewById(R.id.textView_main_result);
-        mTextViewResult.setMovementMethod(new ScrollingMovementMethod());
-    }
+        /* mobile-view
+        mWebView = (WebView)findViewById(R.id.webView);
+        mWebView.getSettings().setJavaScriptEnabled(true);
+        mWebView.getSettings().setBuiltInZoomControls(true);
+        mWebView.getSettings().setSupportZoom(true);
+        mWebView.getSettings().setLoadWithOverviewMode(true);
+        mWebView.getSettings().setUseWideViewPort(true);
+        mWebView.loadUrl("http://34.64.241.126/category");
+        mWebView.setWebChromeClient(new WebChromeClient());
+        mWebView.setWebViewClient(new WebViewClient());
+        */
 
-    public void submit(View view) {
-        //이메일, 이름, 비밀번호 들어가는 위젯(Edittext)를 객체화해서 코드에서 다룰 수 있게 해줍니다.
-        mEditTextEmail = (EditText)findViewById(R.id.editText_main_email);
-        mEditTextName = (EditText)findViewById(R.id.editText_main_name);
-        mEditTextPassword = (EditText)findViewById(R.id.editText_main_password);
+    }
 
-        //위젯의 다루기위해서는 객체화를 해줘야합니다.
-        //그리고 그객체에서 text를 가져옵니다.
-        String email = mEditTextEmail.getText().toString();
-        String name = mEditTextName.getText().toString();
-        String password = mEditTextPassword.getText().toString();
-
-        //이 구문이 시작되면서 php를 들어가는 구문이 시작됩니다.
-        InsertData task = new InsertData(); //객체 생성
-        task.execute("http://" + IP_ADDRESS + "/author/register", email, name, password); // 실 실행
-
-        //값을 넣고 이름 부분과, 나라 텍스트 부분을 Null로 만들어줘서 다시 작성할 수 있게 해줍니다.
-        mEditTextEmail.setText("");
-        mEditTextName.setText("");
-        mEditTextPassword.setText("");
+    public void event_signin(View view) {
+        Intent intent2 = new Intent(getApplicationContext(), sub_category.class);
+        startActivity(intent2);
     }
 
 
-    class InsertData extends AsyncTask<String, Void, String>{
-
-        //값이 연결되는 부분을 표현하기 위해서 받은 위젯
-        ProgressDialog progressDialog;
-
-        @Override
-        protected void onPreExecute() {
-            super.onPreExecute();
-
-            //폼을 제출하면 진행흐름을 보여주는 위젯
-            progressDialog = ProgressDialog.show(MainActivity.this,
-                    "Please Wait", null, true, true);
-        }
-
+    /*
+    //웹뷰의 영역
+    private class WebVieClientClass extends WebViewClient{
 
         @Override
-        protected void onPostExecute(String result) {
-            super.onPostExecute(result);
-
-            progressDialog.dismiss();
-            mTextViewResult.setText(result);
-            Log.d(TAG, "POST response  - " + result);
+        public boolean shouldOverrideUrlLoading(WebView view, String url) {
+            Log.d("check URL", url);
+            view.loadUrl(url);
+            return true;
         }
-
-
-        @Override
-        protected String doInBackground(String... params) {
-
-            String serverURL = (String)params[0];
-            String email = (String)params[1];
-            String name = (String)params[2];
-            String password = (String)params[3];
-
-            String postParameters = "email=" +email + "name=" + name + "&password=" + password;
-
-            try {
-                URL url = new URL(serverURL);
-                HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();
-
-                httpURLConnection.setReadTimeout(5000);
-                httpURLConnection.setConnectTimeout(5000);
-
-                httpURLConnection.setRequestMethod("POST");
-                httpURLConnection.connect();
-
-                //여기서 outputStream을 사용한 이유를 파악해야합니다.
-                OutputStream outputStream = httpURLConnection.getOutputStream();
-                outputStream.write(postParameters.getBytes("UTF-8"));
-                outputStream.flush();
-                outputStream.close();
-
-
-                int responseStatusCode = httpURLConnection.getResponseCode();
-                Log.d(TAG, "POST response code - " + responseStatusCode);
-
-                InputStream inputStream;
-                if(responseStatusCode == HttpURLConnection.HTTP_OK) {
-                    inputStream = httpURLConnection.getInputStream();
-                }
-                else{
-                    inputStream = httpURLConnection.getErrorStream();
-                }
-
-
-                InputStreamReader inputStreamReader = new InputStreamReader(inputStream, "UTF-8");
-                BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
-
-                StringBuilder sb = new StringBuilder();
-                String line = null;
-
-                while((line = bufferedReader.readLine()) != null){
-                    sb.append(line);
-                }
-
-                bufferedReader.close();
-
-                return sb.toString();
-
-            } catch (Exception e) {
-                Log.d(TAG, "InsertData: Error ", e);
-                return new String("Error: " + e.getMessage());
-            }
-        }
-    }
-
+    }*/
 
 }
\ No newline at end of file
